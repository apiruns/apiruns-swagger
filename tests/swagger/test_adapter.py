from apiruns_swagger.swagger.adapters import TransFormOpenApi3

class TestTransForms:
    
    tranform = TransFormOpenApi3()
    
    def test_execute(self, schema):
        """Test """
        expected = {'openapi': '3.0.3', 'info': {'title': 'Swagger doc - OpenAPI 3.0', 'version': '1.0.11'}, 'servers': [{'url': 'http://localhost:8080'}], 'paths': {'/users': {'get': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}}}, 'post': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}}}, 'put': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}}}, 'patch': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}}}, 'delete': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'username': {'type': 'string'}, 'age': {'type': 'integer'}, 'is_admin': {'type': 'boolean'}, 'level': {'type': 'string'}}}}}}}}}, '/rafa': {'get': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'post': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'put': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'patch': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'delete': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}}, '/pepito': {'get': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'post': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'put': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'patch': {'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'name': {'type': 'string'}}}}}}, 'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}, 'delete': {'responses': {'200': {'description': 'Successful operation', 'content': {'application/json': {'schema': {'properties': {'public_id': {'type': 'string', 'example': '550e8400-e29b-41d4-a716-446655440000'}, 'name': {'type': 'string'}}}}}}}}}}}
        specification = self.tranform.execute(schema)
        assert expected == specification
